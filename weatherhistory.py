# -*- coding: utf-8 -*-
"""weatherHistory.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cbEXhQ56DD_YsEBXOHLHdu1qMBbUC6eP

Import necessary libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler
from google.colab import files

"""Upload and Load the CSV"""

uploaded = files.upload()
df = pd.read_csv('weatherHistory.csv')

"""View INFO"""

print(df.info())
print(df.columns)

"""Convert date column"""

df['Formatted Date'] = pd.to_datetime(df['Formatted Date'], errors='coerce', utc=True)

"""Select numeric columns only"""

numeric_cols = df.select_dtypes(include=[np.number]).columns

"""Normalize numeric values safely using .loc"""

scaler = MinMaxScaler()
df.loc[:, numeric_cols] = scaler.fit_transform(df[numeric_cols])

"""# **PLOTS**

Temperature Histogram
"""

df['Temperature (C)'].plot(kind='hist', bins=30, color='skyblue', edgecolor='black')
plt.title("Temperature Distribution")
plt.xlabel("Normalized Temperature")
plt.grid(True)
plt.show()

"""Scatter Plot: Temperature vs Humidity"""

sns.scatterplot(x='Temperature (C)', y='Humidity', data=df)
plt.title("Temperature vs Humidity")
plt.xlabel("Temperature")
plt.ylabel("Humidity")
plt.grid(True)
plt.show()

"""Average Humidity by Month"""

df['Month'] = df['Formatted Date'].dt.month

monthly_avg_humidity = df.groupby('Month')['Humidity'].mean()

monthly_avg_humidity.plot(kind='bar', color='skyblue', edgecolor='black')
plt.title('Average Humidity by Month')
plt.xlabel('Month')
plt.ylabel('Normalized Humidity')
plt.xticks(rotation=0)
plt.grid(True)
plt.show()

"""Weather Summary Frequency"""

top_summaries = df['Summary'].value_counts().nlargest(6).index
df_filtered = df[df['Summary'].isin(top_summaries)]

plt.figure(figsize=(10, 5))
sns.countplot(data=df_filtered, x='Summary', palette='pastel')
plt.title("Most Common Weather Conditions")
plt.xlabel("Summary")
plt.ylabel("Count")
plt.xticks(rotation=45)
plt.tight_layout()
plt.grid(True)
plt.show()

"""Linear Regression Prediction Graph"""

# @title Default title text
X = df[['Humidity']]
y = df['Temperature (C)']

model = LinearRegression()
model.fit(X, y)

df['Predicted_Temp'] = model.predict(X)

plt.figure(figsize=(10, 5))
plt.scatter(df['Humidity'], df['Temperature (C)'], color='lightblue', label='Actual')
plt.plot(df['Humidity'], df['Predicted_Temp'], color='red', label='Predicted', linewidth=2)
plt.title("Linear Regression: Humidity vs Temperature")
plt.xlabel("Humidity")
plt.ylabel("Temperature (C)")
plt.legend()
plt.grid(True)
plt.show()